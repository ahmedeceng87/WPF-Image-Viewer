name: Image Viewer Wpf Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [AnyCPU]

    runs-on: windows-latest  
    env:
      Solution_Name: ImageViewer.sln      
      Wap_Project_Directory: ImageViewerPackager
      Wap_Project_Path: ImageViewerPackager\ImageViewerPackager.wapproj
      SigningCertificate: ImageViewerPackager_TemporaryKey.pfx
      Test_Project_Path: ImageViewer\Fliicker.Unit.Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET 
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x

    # Setup MSBuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    # Test
    - name: Execute Unit Tests
      run: dotnet test $env:Test_Project_Path
      
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:ImageViewer.sln /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: ${{ matrix.configuration }}
        RuntimeIdentifier: win-${{ matrix.targetplatform }}
        
    # Decode the Base64 encoded Pfx
    - name: Decode the Pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:SigningCertificate
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        
   # Create the app package by building and packaging the Windows Application Packaging project
    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:Platform=$env:TargetPlatform /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=$env:SigningCertificate
      env:
        Appx_Bundle: Never
        TargetPlatform: ${{ matrix.targetplatform }}
        Appx_Package_Build_Mode: SideloadOnly
        Configuration: ${{ matrix.configuration }}
        
   # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path $env:Wap_Project_Directory\\$env:SigningCertificate
      
   # Upload the MSIX package: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Image Viewer Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages   



   
